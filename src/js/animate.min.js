/*! animate.js v1.1.8 | (c) 2016 Josh Johnson | https://github.com/jshjohnson/animate.js */
!function (t, e) { "function" == typeof define && define.amd ? define(function () { return e(t) }) : "object" == typeof exports ? module.exports = e : t.Animate = e(t) }(this, function (t) { "use strict"; var e = function (e) { var i = t.document.createElement("fakeelement"); this.throttledEvent = this._debounce(function () { this.render() }.bind(this), 15), this.supports = "querySelector" in t.document && "addEventListener" in t && "classList" in i, this.options = this._extend({ animatedClass: "js-animated", offset: .5, delay: 0, target: "[data-animate]", removeAnimations: !0, reverse: !1, debug: !1, onLoad: !0, onScroll: !0, onResize: !1, callbackOnInit: function () { }, callbackOnAnimate: function () { } }, e || {}), this.elements = t.document.querySelectorAll(this.options.target), this.initialised = !1 }; return e.prototype._debounce = function (t, e, i) { var n; return function () { var o = this, s = arguments, a = i && !n; clearTimeout(n), n = setTimeout(function () { n = null, i || t.apply(o, s) }, e), a && t.apply(o, s) } }, e.prototype._extend = function () { for (var t = {}, e = arguments.length, i = function (e) { for (var i in e) t[i] = e[i] }, n = 0; n < e; n++) { var o = arguments[n]; this._isType("Object", o) ? i(o) : console.error("Custom options must be an object") } return t }, e.prototype._whichAnimationEvent = function () { var e, i = t.document.createElement("fakeelement"), n = { animation: "animationend", OAnimation: "oAnimationEnd", MozAnimation: "animationend", WebkitAnimation: "webkitAnimationEnd" }; for (e in n) if (void 0 !== i.style[e]) return n[e] }, e.prototype._getElemDistance = function (t) { var e = 0; if (t.offsetParent) do { e += t.offsetTop, t = t.offsetParent } while (t); return e >= 0 ? e : 0 }, e.prototype._getElemOffset = function (t) { var e = parseFloat(t.getAttribute("data-animation-offset")); return isNaN(e) ? isNaN(this.options.offset) ? void 0 : Math.max(t.offsetHeight * this.options.offset) : (e > 1 && (e = 1), e < 0 && (e = 0), Math.max(t.offsetHeight * e)) }, e.prototype._getScrollPosition = function (e) { return "bottom" === e ? Math.max((t.scrollY || t.pageYOffset) + (t.innerHeight || t.document.documentElement.clientHeight)) : t.scrollY || t.pageYOffset }, e.prototype._isInView = function (t) { var e = function () { return this._getScrollPosition("bottom") > this._getElemDistance(t) + this._getElemOffset(t) }.bind(this), i = function () { return this._getScrollPosition("top") > this._getElemDistance(t) + this._getElemOffset(t) }.bind(this); return !!(e() & !i()) }, e.prototype._isVisible = function (t) { return "true" === t.getAttribute("data-visibility") }, e.prototype._hasAnimated = function (t) { return "true" === t.getAttribute("data-animated") }, e.prototype._isType = function (t, e) { var i = Object.prototype.toString.call(e).slice(8, -1); return null != e && i === t }, e.prototype._addAnimation = function (e) { e.setAttribute("data-visibility", !0); var i = e.getAttribute("data-animation-classes").split(" "), n = parseInt(e.getAttribute("data-animation-delay"), 10) || this.options.delay; n && this._isType("Number", n) && 0 !== n ? setTimeout(function () { this.options.debug && t.console.debug && console.debug("Animation added"), i.forEach(function (t) { e.classList.add(t) }) }.bind(this), n) : (this.options.debug && t.console.debug && console.debug("Animation added"), i.forEach(function (t) { e.classList.add(t) })), this._completeAnimation(e) }, e.prototype._removeAnimation = function (e) { e.setAttribute("data-visibility", !1), e.removeAttribute("data-animated"); var i = e.getAttribute("data-animation-classes").split(" "), n = parseInt(e.getAttribute("data-animation-delay"), 10); i.push(this.options.animatedClass), n && this._isType("Number", n) ? setTimeout(function () { this.options.debug && t.console.debug && console.debug("Animation removed"), i.forEach(function (t) { e.classList.remove(t) }) }.bind(this), n) : (this.options.debug && t.console.debug && console.debug("Animation removed"), i.forEach(function (t) { e.classList.remove(t) })) }, e.prototype._completeAnimation = function (e) { var i = this._whichAnimationEvent(); e.addEventListener(i, function () { (this.options.debug && t.console.debug && console.debug("Animation completed"), "false" !== e.getAttribute("data-animation-remove") && this.options.removeAnimations) && e.getAttribute("data-animation-classes").split(" ").forEach(function (t) { e.classList.remove(t) }); e.classList.add(this.options.animatedClass), e.setAttribute("data-animated", !0), this.options.callbackOnAnimate && this._isType("Function", this.options.callbackOnAnimate) ? this.options.callbackOnAnimate(e) : console.error("Callback is not a function") }.bind(this)) }, e.prototype.init = function () { this.options.debug && t.console.debug && console.debug("Animate.js successfully initialised. Found " + this.elements.length + " elements to animate"), this.supports && (this.options.onLoad && t.document.addEventListener("DOMContentLoaded", function () { this.render() }.bind(this)), this.options.onResize && t.addEventListener("resize", this.throttledEvent, !1), this.options.onScroll && t.addEventListener("scroll", this.throttledEvent, !1), this.options.callbackOnInit && this._isType("Function", this.options.callbackOnInit) ? this.options.callbackOnInit() : console.error("Callback is not a function"), this.initialised = !0) }, e.prototype.kill = function () { this.options.debug && t.console.debug && console.debug("Animation.js nuked"), this.initialised && (this.options.onResize && t.removeEventListener("resize", this.throttledEvent, !1), this.options.onScroll && t.removeEventListener("scroll", this.throttledEvent, !1), this.options = null, this.initialised = !1) }, e.prototype.render = function () { for (var t = this.elements, e = t.length - 1; e >= 0; e--) { var i = t[e], n = i.getAttribute("data-animation-reverse"); this._isInView(i) ? this._isVisible(i) || this._addAnimation(i) : this._hasAnimated(i) && "false" !== n && this.options.reverse && this._removeAnimation(i) } }, e });